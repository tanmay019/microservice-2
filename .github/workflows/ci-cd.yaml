# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Logger Microservice Pipeline

on:
  push:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v2

      - name: "Setting environment variables"
        run: "commitId='${{ github.sha }}' && export commitId"

      - name: "Debug: Echo commitId base64"
        run: "echo ${{ github.sha }} | base64"

      - name: "Use Node.js 10.x"
        uses: actions/setup-node@v1
        with:
          node-version: "10.x"

      - name: Build and push to docker hub
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
          repository: gauti019/logger-microservice
          tags: ${{ github.sha }}

      - name: "Set latest container-image to use"
        run: "sed -i '$ d' ./ms2-chart/values.yaml  && echo commitId: ${{ github.sha }} >> ./ms2-chart/values.yaml"

      - name: "Debug: Echo commitId"
        run: "cat ./ms2-chart/values.yaml"

      - name: Setup & install Google-Cloud-Platform
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: "290.0.1"
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
          # project_id: ${{ secrets.GCP_PROJECT_ID }}
      - run: "gcloud container clusters get-credentials my-first-cluster-2 --zone us-central1-c --project tranquil-apogee-287511"

      - name: "Debug: Echo new file"
        run: "cat ./ms2-chart/values.yaml"

      - name: "Debug get present Values.yaml"
        run: "cat ./ms2-chart/values.yaml"

      - name: Install Helm package manager
        uses: azure/setup-helm@v1
        with:
          version: "v3.3.0"

      - name: K8s deploy stuff
        run: "./deploy-to-k8s.sh $commitId"
